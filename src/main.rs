use mdf_rust::mdf3;

use std::str;




fn main() {

	let file: [u8; 64] = [
		0x4D, 0x44, 0x46, 0x20, 
		0x20, 0x20, 0x20, 0x20, 
		0x33, 0x2E, 0x33, 0x30, 
		0x00, 0x00, 0x00, 0x00, 
		0x61, 0x6D, 0x64, 0x66, 
		0x36, 0x34, 0x34, 0x00, 
		0x00, 0x00, 0x00, 0x00, 
		0x4A, 0x01, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00,];
	let header = mdf3::read(&file);

	println!("File ID: ");
	for u in header.file_id {
		println!("{}", u);
	}

	println!("File ID: {}", str::from_utf8(&header.file_id).expect("msg"));

	// let check= pop(&file[0..3]);

	// println!("Double check: {}", check[2]);

}

// fn pop(barry: &[u8]) -> [u8; 3] {
//     barry.try_into().expect("slice with incorrect length")
// }
